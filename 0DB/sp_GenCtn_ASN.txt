USE [PIE]
GO
/****** Object:  StoredProcedure [dbo].[sp_GenCtn_ASN]    Script Date: 03/18/2015 09:47:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<ling.xie>
-- Create date: <08-08-2014>
-- Description:	<Gen Carton No>
-- example exec 
--declare @result tinyint
--exec [sp_GenCtn_ASN] 'R1503030270','1','e-Packing-asn','x1234','Number','10746184','1000','1','236','237','','test',@result output
--select @result
-- 0: success 1:error 3:has upload to erp;
-- =============================================
create PROCEDURE [dbo].[sp_GenCtn_ASN]
	-- Add the parameters for the stored procedure here
	(
	 @Batch_ID varchar(20),
	 @LineID int,
	 @plr_doc_type nvarchar(50),
     @CartonID varchar(30),     
     @CartonType varchar(30),
     @plr_po varchar(50),
     @plr_qty decimal(18,0),
     @plr_qty_ctn decimal(18,0),
     @ctnPre varchar(10),
	 @ctnFr int,
     @ctnTo int,
     @plr_cre_userid varchar(50),
     @plr_user_ip varchar(50),
     --@plr_partno  varchar(30),
     @result tinyint output
	)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	declare @wec_ctn_pre nvarchar(50),
			@wec_ctn int, 
			@plr_wec_ctn nvarchar(50),
			@getYearMD nvarchar(8),
			@ctnPrefix nvarchar(10),
			@CartonNoIn nvarchar(30),
			@cartonTmp nvarchar(50)
    -- Insert statements for procedure here
    set @result = 1 
    set @getYearMD = convert(char(4),YEAR(getdate())) + 
                     REPLICATE('0',2-len(month(getdate()))) + 
                     convert(nvarchar(2),month(getdate())) + 
                     convert(char(2),Datepart(week,GETDATE()))
 if exists(select top 1 * from plr_mstr_tran where Batch_ID=@Batch_ID and LineID=@LineID and CartonNo=@CartonID)--and plr_status='U'
	begin
		set @result = 3
		return
	end 
	
begin tran
   select top 1 @wec_ctn = ctl_curr from dbo.pkey_ctl where t_name='Plr_mstr_tran' and t_value ='Wec_Ctn'
		if (@wec_ctn is null) or (@wec_ctn='')
		  set @wec_ctn = 0

	begin
		  set @wec_ctn = @wec_ctn + 1 		    
		  set @ctnPrefix = @CartonID   
		  
		  while(1=1)
			begin
			 if exists(select top 1 Wec_Ctn from Plr_mstr_tran where Wec_Ctn = @wec_ctn)	
				begin
					set @wec_ctn = @wec_ctn + 1 							
				end	
			 else
				begin
					if exists(select top 1 t_name from dbo.pkey_ctl where t_name='Plr_mstr_tran' and t_value ='Wec_Ctn')
						update dbo.pkey_ctl set ctl_curr=@wec_ctn where t_name='Plr_mstr_tran' and t_value ='Wec_Ctn'
					else
						insert dbo.pkey_ctl (t_name,t_value,ctl_curr) values ('Plr_mstr_tran','Wec_Ctn',@wec_ctn)	
					break
				end			 								
            
		 end	 
           
              	
			--select @wec_ctn_pre=Irh_Sys
			if exists(select top 1 irh_prefix
						 from Irh_comp  where (rtrim(irh_prefix)=substring(@plr_po,1,1) or rtrim(irh_prefix)=substring(@plr_po,1,2) 
							 or rtrim(irh_prefix)=substring(@plr_po,1,3)))
			  select @wec_ctn_pre=irh_prefix
				 from Irh_comp  where (rtrim(irh_prefix)=substring(@plr_po,1,1) or rtrim(irh_prefix)=substring(@plr_po,1,2) 
					 or rtrim(irh_prefix)=substring(@plr_po,1,3))
			 else
				set @wec_ctn_pre='Z'
			 		 
			 set @plr_wec_ctn = ltrim(rtrim(@wec_ctn_pre)) + REPLICATE('0',12-len(ltrim(rtrim(@wec_ctn_pre)))-LEN(@wec_ctn)) + convert(nvarchar,@wec_ctn)
		
		   
			insert into Plr_mstr_tran 
					   (Batch_ID, LineID, Wec_Ctn, CartonNo, plr_wec_ctn, CartonID, CartonType,plr_suppliers_id, packingListID, InvoiceID, plr_site, plr_pallet_no, plr_po, plr_co, plr_partno, plr_date_code, plr_vend_mfgr, Plr_vm_partno, plr_carton_qty, plr_qty, plr_rcp_date, plr_deli_date, carton_id_prifix, plr_status, plr_cre_date, plr_cre_userid, plr_update_date, plr_edituser_id, plr_user_ip, plr_void_status, plr_chr02, plr_deci1, plr_deci2)
			select Batch_ID, LineID, @wec_ctn,@ctnPrefix,@plr_wec_ctn,@ctnPrefix, CartonType,plr_suppliers_id, packingListID, InvoiceID, plr_site, @plr_doc_type, plr_po, plr_co, plr_partno, plr_date_code, plr_vend_mfgr, Plr_vm_partno, @plr_qty_ctn, @plr_qty, plr_rcp_date, plr_deli_date, carton_id_prifix, 'C',getdate(),@plr_cre_userid, getdate(), plr_edituser_id,@plr_user_ip, plr_void_status,plr_chr02, plr_deci1, plr_deci2
			from Plr_mstr where Batch_ID=@Batch_ID and LineID=@LineID and plr_po=@plr_po --and plr_partno=@plr_partno
			
			--print @lineID
			--update plr_mstr
			set @cartonTmp=@ctnPrefix
			select @cartonTmp=(a.mi+'-'+a.mx) from (select min(CartonNo) as mi,MAX(CartonNo) as mx from plr_mstr_tran  
				where Batch_ID=@Batch_ID and LineID=@LineID) a where a.mi<>a.mx
				
			select @plr_doc_type=(a.mi+'-'+a.mx) from (select min(plr_pallet_no) as mi,MAX(plr_pallet_no) as mx from plr_mstr_tran  
				where Batch_ID=@Batch_ID and LineID=@LineID) a where a.mi<>a.mx
						
			update plr_mstr set CartonID=@cartonTmp,carton_id_prifix=@cartonTmp,plr_pallet_no=@plr_doc_type where Batch_ID=@Batch_ID and LineID=@LineID
			update plr_mstr_tran set CartonID=@cartonTmp,carton_id_prifix=@cartonTmp where Batch_ID=@Batch_ID and LineID=@LineID
			
            select @result = 0	
	 end
	     	    
commit tran
   if @@ERROR <> 0
   begin
     select @result = 1
     rollback tran
     return
   end
END
